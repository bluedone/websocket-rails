{"name":"websocket-rails","body":"# Websocket-Rails\r\n\r\n[![Build Status](https://secure.travis-ci.org/DanKnox/websocket-rails.png)](https://secure.travis-ci.org/DanKnox/websocket-rails)\r\n\r\n**Now with streaming HTTP support for improved browser compatibility**\r\n\r\nWe make WebSockets too easy not to use. Websocket-Rails integrates a Rack compatible WebSocket server directly into your Rails application without the need for a separate server process. Client side events are mapped to controller actions using the event router. It's the power of the evented web with the development flow you are used to.\r\n\r\n[Check out the documentation for detailed information](http://rdoc.info/github/DanKnox/websocket-rails/master/frames)\r\n\r\nAs this project is in its infancy, all suggestions, gripes, pull requests, and general nay saying is very much appreciated. Please feel free to open up an issue on the [Github issue tracker](https://github.com/DanKnox/websocket-rails/issues), or [shoot us an email](mailto://support@threedotloft.com).\r\n\r\n## 5 Easy Steps to WebSocket Goodness\r\n\r\n1. Add the `websocket-rails` gem to your Gemfile and install the bundle.\r\n2. Create a [WebsocketRails Controller](http://rdoc.info/github/DanKnox/websocket-rails/master/frames/WebsocketRails/BaseController) in your `app/controllers` directory.\r\n3. Map a client event to your controller action using the [Event Router](http://rdoc.info/github/DanKnox/websocket-rails/master/frames/WebsocketRails/Events).\r\n4. Launch the web server with the [included executable](https://github.com/DanKnox/websocket-rails#installation). (This is temporary)\r\n5. Connect to the server with a [WebSocket client](https://github.com/DanKnox/websocket-rails#javascript-client) and enjoy.\r\n\r\n## Project Goals\r\n\r\nWebsocket-Rails aims to be more than just a WebSocket server. We wish to provide an alternative means for easily developing rich interactive web applications without pushing application logic onto the client side and fragmenting the code base. Client code should be responsible for presentation. Server code should encapsulate the domain logic. Life should remain enjoyable.\r\n\r\nThis project will eventually include a full featured JavaScript WebSocket client and/or integration into something like EmberJS to make the client event management as streamlined as possible. Ideally, it will grow to a point where important client events naturally bubble up to the server for processing and any time a model is updated in Rails, events will trigger the JavaScript client to automatically update the rendered representation of that model on the client with minimal effort.\r\n\r\n## Current Development Needs\r\n1. JavaScript WebSocket based event dispatcher.\r\n2. Logger integration for easy event logging.\r\n3. ActiveModel event integration.\r\n4. Event namespace support with scoping handled in the event route file.\r\n\r\n## Development\r\n\r\nThis gem is created and maintained by Dan Knox and Kyle Whalen under the MIT License.\r\n\r\nBrought to you by:\r\n\r\nThree Dot Loft LLC","tagline":"Plug and play WebSocket support for ruby on rails.","google":"UA-27751069-2","note":"Don't delete this file! It's used internally to help with page regeneration."}